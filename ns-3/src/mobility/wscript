## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    mobility = bld.create_ns3_module('mobility', ['network'])
    mobility.source = [
        'model/box.cc',
        'model/constant-acceleration-mobility-model.cc',
        'model/constant-position-mobility-model.cc',
        'model/constant-velocity-helper.cc',
        'model/constant-velocity-mobility-model.cc',
        'model/gauss-markov-mobility-model.cc',
        'model/geographic-positions.cc',
        'model/hierarchical-mobility-model.cc',
        'model/mobility-model.cc',
        'model/position-allocator.cc',
        'model/random-direction-2d-mobility-model.cc',
        'model/random-walk-2d-mobility-model.cc',
        'model/random-waypoint-mobility-model.cc',
        'model/rectangle.cc',
        'model/steady-state-random-waypoint-mobility-model.cc',
        'model/waypoint.cc',
        'model/waypoint-mobility-model.cc',
        'helper/mobility-helper.cc',
        'helper/ns2-mobility-helper.cc',
        ##Developed by THANG
        'model/steady-state-random-waypoint-doughnut-mobility-model.cc',
        'model/random-back-forth-cross-ball-mobility-model.cc',
        'model/circle-mobility-model.cc',
        'model/random-edge-hexagonal-mobility-model.cc',
        'model/random-circle-in-rectangle.cc',
        'model/random-circle-in-disc.cc',
        'model/random-circle-cross-circle.cc',
        'model/manhattan-grid-mobility-model.cc',
        'model/manhattan-grid-mobility-model1.cc',
        'model/back-forth-between-two-points-mobility-model.cc',
        'model/real-map-mobility-model.cc',
        ]

    mobility_test = bld.create_ns3_module_test_library('mobility')
    mobility_test.source = [
        'test/mobility-test-suite.cc',
        'test/mobility-trace-test-suite.cc',
        'test/ns2-mobility-helper-test-suite.cc',
        'test/steady-state-random-waypoint-mobility-model-test.cc',
        'test/waypoint-mobility-model-test.cc',
        'test/geo-to-cartesian-test.cc',
        'test/rand-cart-around-geo-test.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'mobility'
    headers.source = [
        'model/box.h',
        'model/constant-acceleration-mobility-model.h',
        'model/constant-position-mobility-model.h',
        'model/constant-velocity-helper.h',
        'model/constant-velocity-mobility-model.h',
        'model/gauss-markov-mobility-model.h',
        'model/geographic-positions.h',
        'model/hierarchical-mobility-model.h',
        'model/mobility-model.h',
        'model/position-allocator.h',
        'model/rectangle.h',
        'model/random-direction-2d-mobility-model.h',
        'model/random-walk-2d-mobility-model.h',
        'model/random-waypoint-mobility-model.h',
        'model/steady-state-random-waypoint-mobility-model.h',
        'model/waypoint.h',
        'model/waypoint-mobility-model.h',
        'helper/mobility-helper.h',
        'helper/ns2-mobility-helper.h',
        ##Developed by THANG
        'model/steady-state-random-waypoint-doughnut-mobility-model.h',
        'model/random-back-forth-cross-ball-mobility-model.h',
        'model/circle-mobility-model.h',
        'model/random-edge-hexagonal-mobility-model.h',
        'model/random-circle-in-rectangle.h',
        'model/random-circle-in-disc.h',
        'model/random-circle-cross-circle.h',
        'model/manhattan-grid-mobility-model.h',
        'model/manhattan-grid-mobility-model1.h',
        'model/back-forth-between-two-points-mobility-model.h',
        'model/real-map-mobility-model.h',
        ]

    if (bld.env['ENABLE_EXAMPLES']):
        bld.recurse('examples')

    bld.ns3_python_bindings()
